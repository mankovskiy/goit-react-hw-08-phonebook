{"version":3,"file":"static/js/523.fc51ef9a.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Input, FormControl, FormLabel, Button } from '@chakra-ui/react';\nimport { addContact } from 'redux/contacts/operations';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport PropTypes from 'prop-types';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChangeInput = e => {\n    const { value } = e.target;\n    e.target.name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n    dispatch(addContact(contact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormControl as=\"form\" onSubmit={handleSubmit}>\n      <FormLabel>Name</FormLabel>\n      <Input\n        borderRadius=\"xl\"\n        mb={10}\n        size=\"sm\"\n        variant=\"filled\"\n        placeholder=\"Name\"\n        onChange={handleChangeInput}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n      />\n      <FormLabel>Number</FormLabel>\n      <Input\n        borderRadius=\"xl\"\n        size=\"sm\"\n        variant=\"filled\"\n        placeholder=\"Number\"\n        onChange={handleChangeInput}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n      />\n      <Button\n        justifyItems=\"center\"\n        mt={10}\n        mb={10}\n        display=\"flex\"\n        type=\"submit\"\n        size=\"sm\"\n      >\n        add contact\n      </Button>\n    </FormControl>\n  );\n}\n\nContactForm.propTypes = {\n  handleChangeInput: PropTypes.func,\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilterValue } from 'redux/contacts/operations';\nimport { Box, Input, FormLabel } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleSetFilterValue = e => {\n    const value = e.target.value;\n\n    dispatch(setFilterValue(value));\n  };\n  return (\n    <Box w={{ md: 320 }}>\n      <FormLabel>Find contacts by name</FormLabel>\n      <Input\n        borderRadius=\"xl\"\n        mb={6}\n        type=\"text\"\n        placeholder=\"Search name\"\n        size=\"sm\"\n        variant=\"filled\"\n        onChange={handleSetFilterValue}\n      />\n    </Box>\n  );\n};\n","// import { DeleteBtn } from './ContactListItem.styled';\nimport { useDispatch } from 'react-redux';\n// import BeatLoader from 'react-spinners/BeatLoader';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useState } from 'react';\nimport { Stack, Text, Button, Box } from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function ContactListItem({ id, name, number }) {\n  const [isBtnSpiner, setIsBtnSpiner] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(id));\n    setIsBtnSpiner(true);\n  };\n\n  // const btnSpiner = (\n  //   <BeatLoader color=\"#787e7d\" size={5} speedMultiplier={1} margin={3} />\n  // );\n\n  return (\n    <Box\n      borderBottom=\"1px\"\n      borderColor=\"#7b60d2\"\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n    >\n      <Stack align=\"stretch\">\n        <Text fontSize=\"sm\">Name: {name}</Text>\n        <Text fontSize=\"sm\">Number: {number}</Text>\n        {/* <Divider w=\"280px\" borderColor=\"teal.300\" mt={0} /> */}\n      </Stack>\n      <Button\n        isLoading={isBtnSpiner}\n        display=\"flex\"\n        ml={-10}\n        size=\"sm\"\n        color=\"btnColor\"\n        border=\"transparent\"\n        aria-label=\"Delete contact\"\n        variant=\"outline\"\n        onClick={handleDeleteContact}\n      >\n        <DeleteIcon />\n      </Button>\n    </Box>\n  );\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n  handleDeleteContact: PropTypes.func,\n};\n","export const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\n// import { List } from './ContactList.styled';\nimport { Box } from '@chakra-ui/react';\nimport {\n  selectContacts,\n  selectFilter,\n  selectError,\n} from 'redux/contacts/selectors';\nimport { Text, ListItem, List } from '@chakra-ui/react';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n  const filterValue = filter.toLowerCase().trim();\n\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue)\n  );\n\n  return error ? (\n    <b>no network</b>\n  ) : (\n    <Box>\n      {contacts.length === 0 && (\n        <Text fontSize=\"lg\">Contact list is empty</Text>\n      )}\n      <List>\n        {filterContacts.map(({ id, name, number }) => {\n          return (\n            <ListItem key={id}>\n              <ContactListItem id={id} name={name} number={number} />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Box>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  handleDeleteContact: PropTypes.func,\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Box } from '@chakra-ui/react';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Box\n      display={{ md: 'flex' }}\n      gap={150}\n      justifyContent=\"center\"\n      mt={{ base: 6, md: 20 }}\n      pb={16}\n      ml=\"auto\"\n      mr=\"auto\"\n    >\n      <Box w={{ md: 320 }}>\n        <ContactForm />\n      </Box>\n      <Box>\n        <Filter />\n        <Box\n          w={{ md: 320 }}\n          backgroundColor=\"#EDF2F5\"\n          overflow=\"auto\"\n          h={320}\n          // minH=\"32px\"\n          p={4}\n          mt={6}\n          borderRadius=\"xl\"\n        >\n          <ContactList />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n"],"names":["ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","handleChangeInput","e","value","target","reset","as","onSubmit","preventDefault","contact","addContact","borderRadius","mb","size","variant","placeholder","onChange","type","pattern","title","required","justifyItems","mt","display","Filter","w","md","setFilterValue","ContactListItem","id","isBtnSpiner","setIsBtnSpiner","borderBottom","borderColor","justifyContent","alignItems","align","fontSize","isLoading","ml","color","border","onClick","deleteContact","selectContacts","state","contacts","items","selectError","error","selectFilter","filter","ContactList","useSelector","filterValue","toLowerCase","trim","filterContacts","includes","length","map","Contacts","useEffect","fetchContacts","gap","base","pb","mr","backgroundColor","overflow","h","p"],"sourceRoot":""}